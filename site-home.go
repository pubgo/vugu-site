package main

// DO NOT EDIT: This file was generated by vugu. Please regenerate instead of editing or add additional code in a separate file.

import "fmt"
import "reflect"
import "github.com/vugu/vugu"

var _ vugu.ComponentType = (*SiteHome)(nil)

func (comp *SiteHome) BuildVDOM(dataI interface{}) (vdom *vugu.VGNode, css *vugu.VGNode, reterr error) {
	data := dataI.(*SiteHomeData)
	_ = data
	_ = fmt.Sprint
	_ = reflect.Value{}
	event := vugu.DOMEventStub
	_ = event
	var n *vugu.VGNode
	n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "site-home"}}}
	vdom = n
	{
		parent := n
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " hero ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "section", DataAtom: vugu.VGAtom(354311), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "bg-primary"}}}
		parent.AppendChild(n)
		{
			parent := n
			n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
			parent.AppendChild(n)
			n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "br", DataAtom: vugu.VGAtom(514), Namespace: "", Attr: []vugu.VGAttribute(nil)}
			parent.AppendChild(n)
			n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\u00a0\n        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
			parent.AppendChild(n)
			n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "br", DataAtom: vugu.VGAtom(514), Namespace: "", Attr: []vugu.VGAttribute(nil)}
			parent.AppendChild(n)
			n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\u00a0\n        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
			parent.AppendChild(n)
			n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "br", DataAtom: vugu.VGAtom(514), Namespace: "", Attr: []vugu.VGAttribute(nil)}
			parent.AppendChild(n)
			n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\u00a0\n        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
			parent.AppendChild(n)
			n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "container"}}}
			parent.AppendChild(n)
			{
				parent := n
				n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
				parent.AppendChild(n)
				n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "row justify-content-center"}}}
				parent.AppendChild(n)
				{
					parent := n
					n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
					parent.AppendChild(n)
					n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "col-lg-10 text-white text-center"}}}
					parent.AppendChild(n)
					{
						parent := n
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "h1", DataAtom: vugu.VGAtom(89090), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "font-weight-light"}}}
						parent.AppendChild(n)
						{
							parent := n
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Build a web front-end in Go that runs in your browser, today.", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
						}
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						{
							parent := n
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        Pure Go. Targets WebAssembly (and/or server).\n                        Modern browsers supported. Experimental, for now. Really cool.\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
						}
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
					}
					n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
					parent.AppendChild(n)
				}
				n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
				parent.AppendChild(n)
				n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "row"}}}
				parent.AppendChild(n)
				{
					parent := n
					n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
					parent.AppendChild(n)
					n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "col text-center"}}}
					parent.AppendChild(n)
					{
						parent := n
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "a", DataAtom: vugu.VGAtom(1), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "href", Val: "/doc/start"}, vugu.VGAttribute{Namespace: "", Key: "class", Val: "btn btn-white"}}}
						parent.AppendChild(n)
						// @click = { data.Router.BrowseTo("/doc/start", event) }
						{
							var i_ interface{} = data.Router
							idat_ := reflect.ValueOf(&i_).Elem().InterfaceData()
							var i2_ interface{} = data.Router.BrowseTo
							i2dat_ := reflect.ValueOf(&i2_).Elem().InterfaceData()
							n.SetDOMEventHandler("click", vugu.DOMEventHandler{
								ReceiverAndMethodHash: uint64(idat_[0]) ^ uint64(idat_[1]) ^ uint64(i2dat_[0]) ^ uint64(i2dat_[1]),
								Method:                reflect.ValueOf(data.Router).MethodByName("BrowseTo"),
								Args:                  []interface{}{"/doc/start", event},
							})
						}
						if false {
							// force compiler to check arguments for type safety
							data.Router.BrowseTo("/doc/start", event)
						}
						{
							parent := n
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Start\n                        Now >", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
						}
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
					}
					n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
					parent.AppendChild(n)
					n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "br", DataAtom: vugu.VGAtom(514), Namespace: "", Attr: []vugu.VGAttribute(nil)}
					parent.AppendChild(n)
					n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\u00a0\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
					parent.AppendChild(n)
					n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "br", DataAtom: vugu.VGAtom(514), Namespace: "", Attr: []vugu.VGAttribute(nil)}
					parent.AppendChild(n)
					n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\u00a0\n            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
					parent.AppendChild(n)
				}
				n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
				parent.AppendChild(n)
			}
			n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
			parent.AppendChild(n)
		}
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " / hero ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " components ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "section", DataAtom: vugu.VGAtom(354311), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "pt-0 pb-3"}}}
		parent.AppendChild(n)
		{
			parent := n
			n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
			parent.AppendChild(n)
			n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "container"}}}
			parent.AppendChild(n)
			{
				parent := n
				n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
				parent.AppendChild(n)
				n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "row justify-content-center"}}}
				parent.AppendChild(n)
				{
					parent := n
					n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
					parent.AppendChild(n)
					n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "col-md-6 text-center"}}}
					parent.AppendChild(n)
					{
						parent := n
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "br", DataAtom: vugu.VGAtom(514), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\u00a0\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "h2", DataAtom: vugu.VGAtom(187906), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						{
							parent := n
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
							n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "b", DataAtom: vugu.VGAtom(257), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
							{
								parent := n
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Vugu:", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
							}
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " A modern UI library for ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
							n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "b", DataAtom: vugu.VGAtom(257), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
							{
								parent := n
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Go+WebAssembly", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
							}
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
						}
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						{
							parent := n
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Inspired by tools like ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
							n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "b", DataAtom: vugu.VGAtom(257), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
							{
								parent := n
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Vue", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
							}
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " and ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
							n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "b", DataAtom: vugu.VGAtom(257), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
							{
								parent := n
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "React", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
							}
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: ", Vugu is a small library written entirely in\n                        Go and\n                        able to run in modern browsers using WebAssembly.", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
						}
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "hr", DataAtom: vugu.VGAtom(87810), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						{
							parent := n
							n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
							{
								parent := n
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "PLEASE NOTE: This is ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "span", DataAtom: vugu.VGAtom(40708), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "style", Val: "color:red"}}}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "experimental", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " technology! ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "a", DataAtom: vugu.VGAtom(1), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "href", Val: "/faq#stability"}}}
								parent.AppendChild(n)
								// @click = { data.Router.BrowseTo("/faq#stability", event) }
								{
									var i_ interface{} = data.Router
									idat_ := reflect.ValueOf(&i_).Elem().InterfaceData()
									var i2_ interface{} = data.Router.BrowseTo
									i2dat_ := reflect.ValueOf(&i2_).Elem().InterfaceData()
									n.SetDOMEventHandler("click", vugu.DOMEventHandler{
										ReceiverAndMethodHash: uint64(idat_[0]) ^ uint64(idat_[1]) ^ uint64(i2dat_[0]) ^ uint64(i2dat_[1]),
										Method:                reflect.ValueOf(data.Router).MethodByName("BrowseTo"),
										Args:                  []interface{}{"/faq#stability", event},
									})
								}
								if false {
									// force compiler to check arguments for type safety
									data.Router.BrowseTo("/faq#stability", event)
								}
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "(read\n                                more)", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
							}
						}
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "hr", DataAtom: vugu.VGAtom(87810), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " <ul class=\"pt-2\"> ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						{
							parent := n
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Inspired by modern web UI libraries like Vue and React.", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
						}
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						{
							parent := n
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Single-file components.", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
						}
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						{
							parent := n
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Runs in most modern browsers.", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
						}
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						{
							parent := n
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Simple and sane dev and build environment. (Say goodbye to that node_modules folder!)", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
						}
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						{
							parent := n
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Write UIs with the ease of HTML+CSS for presentation, and the facility of Go for interface logic.\n                        It's pretty cool! See the ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
							n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "a", DataAtom: vugu.VGAtom(1), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "href", Val: "/doc/start"}}}
							parent.AppendChild(n)
							// @click = { data.Router.BrowseTo("/doc/start", event) }
							{
								var i_ interface{} = data.Router
								idat_ := reflect.ValueOf(&i_).Elem().InterfaceData()
								var i2_ interface{} = data.Router.BrowseTo
								i2dat_ := reflect.ValueOf(&i2_).Elem().InterfaceData()
								n.SetDOMEventHandler("click", vugu.DOMEventHandler{
									ReceiverAndMethodHash: uint64(idat_[0]) ^ uint64(idat_[1]) ^ uint64(i2dat_[0]) ^ uint64(i2dat_[1]),
									Method:                reflect.ValueOf(data.Router).MethodByName("BrowseTo"),
									Args:                  []interface{}{"/doc/start", event},
								})
							}
							if false {
								// force compiler to check arguments for type safety
								data.Router.BrowseTo("/doc/start", event)
							}
							{
								parent := n
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Getting\n                            Started", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
							}
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " page.", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
						}
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " </ul> ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "hr", DataAtom: vugu.VGAtom(87810), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "h4", DataAtom: vugu.VGAtom(214274), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						{
							parent := n
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Updates ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
							n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "span", DataAtom: vugu.VGAtom(40708), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "style", Val: "color: red"}}}
							parent.AppendChild(n)
							{
								parent := n
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "♨", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
							}
						}
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "text-left"}}}
						parent.AppendChild(n)
						{
							parent := n
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
							n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "ul", DataAtom: vugu.VGAtom(42754), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
							{
								parent := n
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-12-08", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " First Vugu program successfully compiles with Tinygo.\n                                Testing and a bit more alternate implementation is still required but at least the\n                                compilation works now.\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-11-24", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " WASM test suite now working in Travis CI; getting closer on\n                                TinyGo support and merged refactor into master.\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-11-10", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " Support for TinyGo is in-progress on the tinygo branch. No\n                                known blocking issues as yet, some minor refactor required but looks promising.\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-09-29", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " Router is work-in-progress. Will use radix tree to\n                                efficiently combine common prefixes. Struct tags will usable to two-way-bind path and\n                                query params, or it can be done manually. Some similarities to Angular and Vue routers\n                                but will be less declarative and more functional (instead of a big tree of objects with\n                                various config, you write path handler functions to set whatever properties need to be\n                                set, establish binding, etc). Plan is to get the bulk of this coded by next week.\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-09-22", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " Static HTML renderer (re)implemented. EventEnv bug fix and\n                                added it to to JS renderer to allow background requests at startup. Some initial work on\n                                a router: ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "a", DataAtom: vugu.VGAtom(1), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "href", Val: "https://github.com/vugu/vgrouter"}, vugu.VGAttribute{Namespace: "", Key: "target", Val: "_blank"}}}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "https://github.com/vugu/vgrouter", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-09-15", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " Refactor changes merged into master. Includes: updated\n                                sample code, component resolution at code-generation time, type-safe component params,\n                                optional component param map, BeforeBuild lifecycle callback, modification tracking\n                                system, JS property assignment syntax, \"full HTML\" support, improved DOM event handling,\n                                Go 1.13 support, import deduplication, and a brand new rendering pipeline! Initial\n                                documentation at ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "a", DataAtom: vugu.VGAtom(1), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "target", Val: "_blank"}, vugu.VGAttribute{Namespace: "", Key: "href", Val: "https://github.com/vugu/vugu/wiki/Refactor-Notes---Sep-2019"}}}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "https://github.com/vugu/vugu/wiki/Refactor-Notes---Sep-2019", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-09-08", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " Implemented ModTracker to keep track of changes to\n                                components and their data (this is also the beginning of Vuex-like functionality but\n                                without wrappers or events). Worked out the lifecycle of components in much more detail\n                                and work in progress on nested components implementation (component-refactor branch\n                                currently broken, but finally the core nested component functionality is going in -\n                                hopefully will finish next week).\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-09-07", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " Updated everything for Go 1.13, including both master and\n                                component-refactor branches, Vugu's js wrapper package, site documentation.\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-09-01", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " On component-refactor branch: Form element values and other\n                                related data now available on DOMEvent, ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "code", DataAtom: vugu.VGAtom(378116), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: ".prop=", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " syntax implemented, various\n                                cleanup, imports are deduplicated automatically now, started on nested component\n                                implementation and all of that craziness.\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-08-25", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " CSS now supported on component-refactor branch, including in\n                                full-HTML mode, working sample that pulls in Bootstrap CSS. Vugu's ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "a", DataAtom: vugu.VGAtom(1), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "href", Val: "https://godoc.org/github.com/vugu/vugu/js"}, vugu.VGAttribute{Namespace: "", Key: "target", Val: "_blank"}}}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "js wrapper\n                                    package", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " copied to master and made available.\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-08-18", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " Full HTML (root component can start with\n                                 tag) now supported on component-refactor branch, updated CSS and JS support\n                                figured out and implementation in-progress.\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-08-12", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " Refactored DOM event listener code in-progress, event\n                                registration/deregistration works(-ish), filling out the remaining functionality to\n                                provide event summary, calls like preventDefault(), etc.\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-08-04", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " Some basic stuff in there on the DOM syncing rewrite and the\n                                new instruction workflow from VGNode -> binary encoded to raw bytes in Go -> read with\n                                DataView in JS -> DOM tree manipulation. With the pattern in place the rest should get\n                                easier.\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-07-28", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " Making some hard choices on how to do DOM syncing in a\n                                performant and reliable way. ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "a", DataAtom: vugu.VGAtom(1), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "href", Val: "https://github.com/vugu/vugu/wiki/DOM-Syncing-Instructions"}, vugu.VGAttribute{Namespace: "", Key: "target", Val: "_blank"}}}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "https://github.com/vugu/vugu/wiki/DOM-Syncing-Instructions", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-07-20", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " Some design info on how \"data binding\" (hashing actually)\n                                will work in Vugu: ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "a", DataAtom: vugu.VGAtom(1), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "href", Val: "https://github.com/vugu/vugu/wiki/Data-Hashing-vs-Binding"}, vugu.VGAttribute{Namespace: "", Key: "target", Val: "_blank"}}}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "https://github.com/vugu/vugu/wiki/Data-Hashing-vs-Binding", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-07-16", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " Vugu has a logo! ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "a", DataAtom: vugu.VGAtom(1), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "href", Val: "https://www.instagram.com/p/Bz3zmtYAYcM/"}, vugu.VGAttribute{Namespace: "", Key: "target", Val: "_blank"}}}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "https://www.instagram.com/p/Bz3zmtYAYcM/", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                                Good things are in the works, the plan is to get a bunch of much-awaited updates pushed\n                                to master before the end of the month.\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-05-19", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " Refactor still in progress - this is the cleaned-up\n                                architecture concept: ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "a", DataAtom: vugu.VGAtom(1), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "href", Val: "https://github.com/vugu/vugu/wiki/Architecture-Overview"}, vugu.VGAttribute{Namespace: "", Key: "target", Val: "_blank"}}}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "https://github.com/vugu/vugu/wiki/Architecture-Overview", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-04-07", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " The Vugu Playground is up at: ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "a", DataAtom: vugu.VGAtom(1), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "href", Val: "https://play.vugu.org/"}, vugu.VGAttribute{Namespace: "", Key: "target", Val: "_blank"}}}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "https://play.vugu.org/", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-04-05", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " Thanks to @erinpentecost, **vugufmt is now available** and\n                                provides gofmt-like functionality on your .vugu files. (", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "code", DataAtom: vugu.VGAtom(378116), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "go get\n                                    github.com/vugu/vugu/cmd/vugufmt && go install\n                                    github.com/vugu/vugu/cmd/vugufmt", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: ")\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "2019-04-05", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " The component playground should be available soon; followed\n                                by some internal work to properly handle nested components in a type-safe way; then\n                                probably a router...\n                            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
							}
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
						}
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
					}
					n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
					parent.AppendChild(n)
				}
				n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n\n            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
				parent.AppendChild(n)
				n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: "\n            <div class=\"row gutter-3 align-items-center\">\n              <div class=\"col-lg-5\">\n                <div class=\"row justify-content-center justify-content-lg-end\">\n                  <div class=\"col-8\">\n                    <ul class=\"list-group list-group-minimal\">\n                      <li class=\"list-group-item d-flex align-items-center\">\n                        <div>\n                          <i class=\"fs-24 icon-check2 bg-blue text-white icon-boxed mr-2\"></i>\n                        </div>\n                        Advanced Layout\n                      </li>\n                      <li class=\"list-group-item d-flex align-items-center\">\n                        <div>\n                          <i class=\"fs-24 icon-check2 bg-blue text-white icon-boxed mr-2\"></i>\n                        </div>\n                        Exclusive Design\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n                <div class=\"row mt-3 d-none d-lg-block\">\n                  <div class=\"col\">\n                    <div class=\"boxed p-3\">\n                      <ul class=\"file-tree\">\n                        <li class=\"file-tree-folder empty\">Images\n                          <span>description</span>\n                        </li>\n                        <li class=\"file-tree-folder\">CSS\n                          <span>description</span>\n                          <ul>\n                            <li>file name <span>description</span></li>\n                            <li>file name <span>description</span></li>\n                          </ul>\n                        </li>\n                        <li class=\"file-tree-folder\">HTML\n                          <span>description</span>\n                          <ul>\n                            <li class=\"file-tree-folder\">PAGES\n                              <span>description</span>\n                              <ul>\n                                <li>file name <span>description</span></li>\n                                <li>file name <span>description</span></li>\n                                <li>file name <span>description</span></li>\n                              </ul>\n                            </li>\n                            <li>file name <span>description</span></li>\n                            <li>file name <span>description</span></li>\n                          </ul>\n                        </li>\n                        <li>index.html <span>description</span></li>\n                        <li>components.html <span>description</span></li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-lg-7\">\n                <div class=\"row justify-content-center justify-content-lg-start\">\n                  <div class=\"col-6 col-md-4\">\n                    <div class=\"type boxed\">\n                      <div>\n                        <span class=\"badge badge-green\">New</span>\n                        <h5 class=\"type-title\">Open Sans</h5>\n                        <div class=\"type-example\">\n                          <span>Ab</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-6 col-md-4\">\n                    <div class=\"type bordered\">\n                      <div>\n                        <h5 class=\"type-title\">Open Sans Bold</h5>\n                        <div class=\"type-example\">\n                          <span class=\"font-weight-bold\">Ab</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row mt-3\">\n                  <div class=\"col\">\n                    <div class=\"card\">\n                      <div class=\"card-header no-border bg-white pb-0\">\n                        <ul class=\"nav nav-pills card-header-pills lavalamp\" id=\"myTab\" role=\"tablist\">\n                          <li class=\"nav-item\">\n                            <a class=\"nav-link active\" id=\"home-tab\" data-toggle=\"tab\" href=\"#home\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">HTML</a>\n                          </li>\n                          <li class=\"nav-item\">\n                            <a class=\"nav-link\" id=\"profile-tab\" data-toggle=\"tab\" href=\"#profile\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">CSS</a>\n                          </li>\n                        </ul>\n                      </div>\n                      <div class=\"card-body\">\n                        <div class=\"tab-content\" id=\"myTabContent\">\n                          <div class=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\n                            <pre><code class=\"language-markup\"><div class=\"image image-overlay\"></div></code></pre>\n                          </div>\n                          <div class=\"tab-pane fade\" id=\"profile\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">\n                            <pre><code class=\"language-css\">body {\n      > section,\n      > footer {\n        position: relative;\n        margin: 0 auto;\n        padding: 6.25rem 0;\n        overflow: hidden;\n      }\n    }</code></pre>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row mt-3 justify-content-center justify-content-lg-start\">\n                  <div class=\"col-md-6\">\n                    <div class=\"color bordered\">\n                      <span class=\"color-example bg-blue\"></span>\n                      <div class=\"color-info\">\n                        <h5 class=\"color-title\">Active Blue</h5>\n                        <span>#064CDB</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
				parent.AppendChild(n)
				n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n\n        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
				parent.AppendChild(n)
			}
			n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
			parent.AppendChild(n)
		}
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " / components ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " categories\n    <section class=\"bg-white\">\n      <div class=\"container\">\n        <div class=\"row justify-content-center\">\n          <div class=\"col-md-6 text-center\">\n            <h2>What's <b>in the box</b> ?</h2>\n            <p>Everything you might need to build a super intuitive & readable documentation. Missing something ? <a href=\"mailto:support@webuildthemes.com\" class=\"action text-dark\">Request</a></p>\n          </div>\n        </div>\n        <div class=\"row gutter-1\">\n          <div class=\"col-6 col-md-4 col-lg-2\">\n            <a href=\"documentation/components/accordions.html\" title=\"Accordions\" class=\"card bordered highlight\">\n              <div class=\"card-body text-center px-0 py-1 py-md-2 py-lg-3\">\n                <h5 class=\"fs-18\">Accordions</h5>\n              </div>\n            </a>\n          </div>\n          <div class=\"col-6 col-md-4 col-lg-2\">\n            <a href=\"documentation/components/alerts.html\" title=\"Alerts\" class=\"card bordered highlight\">\n              <div class=\"card-body text-center px-0 py-1 py-md-2 py-lg-3\">\n                <h5 class=\"fs-18\">Alerts</h5>\n              </div>\n            </a>\n          </div>\n          <div class=\"col-6 col-md-4 col-lg-2\">\n            <a href=\"documentation/components/widgets.html\" title=\"Widgets\" class=\"card bordered highlight\">\n              <div class=\"card-body text-center px-0 py-1 py-md-2 py-lg-3\">\n                <h5 class=\"fs-18\">Widgets</h5>\n              </div>\n            </a>\n          </div>\n          <div class=\"col-6 col-md-4 col-lg-2\">\n            <a href=\"documentation/content/typography.html\" title=\"Typography\" class=\"card bordered highlight\">\n              <div class=\"card-body text-center px-0 py-1 py-md-2 py-lg-3\">\n                <h5 class=\"fs-18\">Typography</h5>\n              </div>\n            </a>\n          </div>\n          <div class=\"col-6 col-md-4 col-lg-2\">\n            <a href=\"documentation/components/video.html\" title=\"Video\" class=\"card bordered highlight\">\n              <div class=\"card-body text-center px-0 py-1 py-md-2 py-lg-3\">\n                <h5 class=\"fs-18\">Video</h5>\n              </div>\n            </a>\n          </div>\n          <div class=\"col-6 col-md-4 col-lg-2\">\n            <a href=\"documentation/components/cards.html\" title=\"Cards\" class=\"card bordered highlight\">\n              <div class=\"card-body text-center px-0 py-1 py-md-2 py-lg-3\">\n                <h5 class=\"fs-18\">Cards</h5>\n              </div>\n            </a>\n          </div>\n          <div class=\"col-6 col-md-4 col-lg-2\">\n            <a href=\"documentation/components/carousels.html\" title=\"Carousels\" class=\"card bordered highlight\">\n              <div class=\"card-body text-center px-0 py-1 py-md-2 py-lg-3\">\n                <h5 class=\"fs-18\">Carousels</h5>\n              </div>\n            </a>\n          </div>\n          <div class=\"col-6 col-md-4 col-lg-2\">\n            <a href=\"documentation/components/code.html\" title=\"Code\" class=\"card bordered highlight\">\n              <div class=\"card-body text-center px-0 py-1 py-md-2 py-lg-3\">\n                <h5 class=\"fs-18\">Code</h5>\n              </div>\n            </a>\n          </div>\n          <div class=\"col-6 col-md-4 col-lg-2\">\n            <a href=\"documentation/components/forms.html\" title=\"Forms\" class=\"card bordered highlight\">\n              <div class=\"card-body text-center px-0 py-1 py-md-2 py-lg-3\">\n                <h5 class=\"fs-18\">Forms</h5>\n              </div>\n            </a>\n          </div>\n          <div class=\"col-6 col-md-4 col-lg-2\">\n            <a href=\"documentation/components/accordions.html\" title=\"Lists\" class=\"card bordered highlight\">\n              <div class=\"card-body text-center px-0 py-1 py-md-2 py-lg-3\">\n                <h5 class=\"fs-18\">Lists</h5>\n              </div>\n            </a>\n          </div>\n          <div class=\"col-6 col-md-4 col-lg-2\">\n            <a href=\"documentation/components/steps.html\" title=\"Steps\" class=\"card bordered highlight\">\n              <div class=\"card-body text-center px-0 py-1 py-md-2 py-lg-3\">\n                <h5 class=\"fs-18\">Steps</h5>\n              </div>\n            </a>\n          </div>\n          <div class=\"col-6 col-md-4 col-lg-2\">\n            <a href=\"documentation/index.html\" title=\"View All Components\" class=\"card bordered highlight\">\n              <div class=\"card-body text-center py-1 py-md-2 py-lg-3 action\">\n                <h5 class=\"fs-18 text-primary\">View all</h5>\n              </div>\n            </a>\n          </div>\n        </div>\n      </div>\n    </section>\n     / categories ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " cta\n    <div class=\"half bg-white\">\n      <span class=\"half-bg bg-dark\"></span>\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <div class=\"cta boxed no-border bg-primary p-3 p-md-5\">\n              <i class=\"icon-shopping-cart2 icon-background text-white\"></i>\n              <div class=\"row\">\n                <div class=\"col text-white\">\n                  <h2>Next Level of <b>Documentation</b></h2>\n                  <p class=\"lead\">Purchase Guidebook now, and make documenting your project piece of cake. <a href=\"\" class=\"action text-white\">Buy Now</a></p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n     / cta ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n\n", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
	}
	return
}

func init() { vugu.RegisterComponentType("site-home", &SiteHome{}) }
